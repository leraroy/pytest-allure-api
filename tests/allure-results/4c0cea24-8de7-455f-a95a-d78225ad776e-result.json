{"name": "test_get_tasks_validate_schema", "status": "failed", "statusDetails": {"message": "AssertionError: assert (False, \"Error: {'id': 200577922, 'username': 'victoria vivi', 'color': '', 'email': 'test.victoria.vivi@gmail.com', 'profilePicture': None} is not of type 'number'\") == True\n +  where (False, \"Error: {'id': 200577922, 'username': 'victoria vivi', 'color': '', 'email': 'test.victoria.vivi@gmail.com', 'profilePicture': None} is not of type 'number'\") = get_tasks_schema_validate()\n +    where get_tasks_schema_validate = <modules.GetTasks.GetTasks object at 0x0000019F676CBE50>.get_tasks_schema_validate\n +      where <modules.GetTasks.GetTasks object at 0x0000019F676CBE50> = <tests.test_get_tasks.TestGetTasks object at 0x0000019F676D50D0>.get_tasks", "trace": "self = <tests.test_get_tasks.TestGetTasks object at 0x0000019F676D50D0>\n\n    @allure.story(\"Test get tasks has valid schema\")\n    def test_get_tasks_validate_schema(self):\n        with allure.step(\"Check schema is valid\"):\n>           assert self.get_tasks.get_tasks_schema_validate() == True\nE           assert (False, \"Error: {'id': 200577922, 'username': 'victoria vivi', 'color': '', 'email': 'test.victoria.vivi@gmail.com', 'profilePicture': None} is not of type 'number'\") == True\nE            +  where (False, \"Error: {'id': 200577922, 'username': 'victoria vivi', 'color': '', 'email': 'test.victoria.vivi@gmail.com', 'profilePicture': None} is not of type 'number'\") = get_tasks_schema_validate()\nE            +    where get_tasks_schema_validate = <modules.GetTasks.GetTasks object at 0x0000019F676CBE50>.get_tasks_schema_validate\nE            +      where <modules.GetTasks.GetTasks object at 0x0000019F676CBE50> = <tests.test_get_tasks.TestGetTasks object at 0x0000019F676D50D0>.get_tasks\n\ntest_get_tasks.py:41: AssertionError"}, "steps": [{"name": "Check schema is valid", "status": "failed", "statusDetails": {"message": "AssertionError: assert (False, \"Error: {'id': 200577922, 'username': 'victoria vivi', 'color': '', 'email': 'test.victoria.vivi@gmail.com', 'profilePicture': None} is not of type 'number'\") == True\n +  where (False, \"Error: {'id': 200577922, 'username': 'victoria vivi', 'color': '', 'email': 'test.victoria.vivi@gmail.com', 'profilePicture': None} is not of type 'number'\") = get_tasks_schema_validate()\n +    where get_tasks_schema_validate = <modules.GetTasks.GetTasks object at 0x0000019F676CBE50>.get_tasks_schema_validate\n +      where <modules.GetTasks.GetTasks object at 0x0000019F676CBE50> = <tests.test_get_tasks.TestGetTasks object at 0x0000019F676D50D0>.get_tasks\n", "trace": "  File \"D:\\r_d_course\\r_d_codes\\CourseWork\\ClickUp\\tests\\test_get_tasks.py\", line 41, in test_get_tasks_validate_schema\n    assert self.get_tasks.get_tasks_schema_validate() == True\n"}, "steps": [{"name": "Trying to send GET request to /list/901512007029/task", "status": "passed", "start": 1749630084100, "stop": 1749630084610}], "start": 1749630084100, "stop": 1749630084621}], "attachments": [{"name": "log", "source": "065b728c-c9d7-4c50-8265-a8d4ff0acc0c-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "750ffbec-cb32-462b-a13a-c5ea89b4a663-attachment.txt", "type": "text/plain"}], "start": 1749630084100, "stop": 1749630084623, "uuid": "96f03237-909f-491f-a6aa-1c6753e9a0c4", "historyId": "234122eb32bc130c2c7163319e9470b0", "testCaseId": "234122eb32bc130c2c7163319e9470b0", "fullName": "tests.test_get_tasks.TestGetTasks#test_get_tasks_validate_schema", "labels": [{"name": "story", "value": "Test get tasks has valid schema"}, {"name": "epic", "value": "Tests Get Tasks"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_get_tasks"}, {"name": "subSuite", "value": "TestGetTasks"}, {"name": "host", "value": "DESKTOP-HVDQGLK"}, {"name": "thread", "value": "8032-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_get_tasks"}]}